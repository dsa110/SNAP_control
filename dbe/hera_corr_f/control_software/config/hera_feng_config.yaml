#
# For each fengine, specify the host ip address (host_ip), destination port (dest_port),
# the antenna numbers it is processing (ants). 
#
# The following booleans can also be set- 
# if it needs to be initialized (init), 
# if you want to set noise (noise), 
# or test vector (tvg) input and if you want it to 
# send data over ethernet (eth).
#
# If a specific boolean task needs to be implemented on all fengines, you can 
# set it as a global parameter.
#
# NB: If fengine antennas are not specified, they will be alloted according the order in 
# which they are presented here.

# You can set the following global parameters for all fengines 
# or enable them for only some fengines. The global parameters 
# overrride the individual fengine settings.

# You can sync the fengines using an external PPS signal
# or manually using a software register. 
# Choices: 'pps', 'manual', False (default: 'pps')
sync: 'pps'

# The test vector generator can operate in multiple modes:
# 'const_ants' : Writes a different constant value 
#                to all channels of an antenna (both pols).
# 'const_pols' : Write a different constant value  
#                to both pols of an antenna.
# 'ramp'       : Write the same ramp to all pols.
# 'ramp_pols'  : Write a different ramp to each pol.
# False        : Do not set the test vector (default) 
tvg: False

# Turn on the noise generator for testing
noise: False

initialize: False

# Disable transmission for all fengines
eth: False

# FFT shift. One bit per FFT stage, the first stage is the LSB
# If the FFT uses bit growth, some or all of the stages may be ignored
fft_shift: 0b0110111111111111

# Specify a full path to an F-Engine fpg files
# or redis:<fpg filename> if the fpg file has been uploaded to redis
#fpgfile: 'redis:snap_fengine_2019-10-27_0728.fpg'
fpgfile: 'redis:snap_fengine_2019-08-29_1717.fpg'

# Destination port for SNAP data
dest_port: 8511

# Phase switch step period
# 2**18 * 2**log_walsh_step_size is the period in 250MHz FPGA clocks of the shortest walsh step
log_walsh_step_size: 3
# Order of walsh matrix (i.e., number of independent patterns possible)
walsh_order: 32
# Delay between modulation and demodulation, in units of 250MHz FPGA clock cycles.
# Used to compensate for cable delays
walsh_delay: 600

fengines:
    heraNode0Snap0:
        phase_switch_index: [1,2,3,4,5,6]
        ants: [0, 1, 2]
    heraNode0Snap1:
        phase_switch_index: [7,8,9,10,11,12]
        ants: [3, 4, 5]
    heraNode0Snap2:
        phase_switch_index: [13,14,15,16,17,18]
        ants: [6, 7, 8]
    heraNode0Snap3:
        phase_switch_index: [19,20,21,22,23,24]
        ants: [9, 10, 11]
    heraNode8Snap0:
        phase_switch_index: [1,2,3,4,5,6]
        ants: [12, 13, 14]
    heraNode8Snap1:
        phase_switch_index: [7,8,9,10,11,12]
        ants: [15, 16, 17]
    heraNode8Snap2:
        phase_switch_index: [13,14,15,16,17,18]
        ants: [18, 19, 20]
    heraNode8Snap3:
        phase_switch_index: [19,20,21,22,23,24]
        ants: [21, 22, 23] 
    heraNode9Snap0:
        phase_switch_index: [1,2,3,4,5,6]
        ants: [24, 25, 26]
    heraNode9Snap1:
        phase_switch_index: [7,8,9,10,11,12]
        ants: [27, 28, 29]
    heraNode9Snap2:
        phase_switch_index: [13,14,15,16,17,18]
        ants: [30, 31, 32]
    heraNode9Snap3:
        phase_switch_index: [19,20,21,22,23,24]
        ants: [33, 34, 35]
    heraNode7Snap0:
        phase_switch_index: [1,2,3,4,5,6]
        ants: [36, 37, 38]
    heraNode7Snap1:
        phase_switch_index: [7,8,9,10,11,12]
        ants: [39, 40, 41]
    heraNode7Snap2:
        phase_switch_index: [13,14,15,16,17,18]
        ants: [42, 43, 44]
    heraNode7Snap3:
        phase_switch_index: [19,20,21,22,23,24]
        ants: [45, 46, 47]
# Data is sent assuming a total of 32 Xengines and 
# a maximum of 48 channels per Xengine. If all the 
# 32 Xengines are not defined, the corresponding channels
# are not sent anywhere.
xengines:
    0:
        even:
           ip: "10.80.40.197"
           mac: 0x02020a5028c5
        odd:
           ip: "10.80.40.206"
           mac: 0x02020a5028ce
        chan_range: [1536, 1920]
    1:
        even:
           ip: "10.80.40.229"
           mac: 0x02020a5028e5
        odd:
           ip: "10.80.40.238"
           mac: 0x02020a5028ee
        chan_range: [1920, 2304]
    2:
        even:
           ip: "10.80.40.198"
           mac: 0x02020a5028c6
        odd:
           ip: "10.80.40.207"
           mac: 0x02020a5028cf
        chan_range: [2304, 2688]
    3:
        even:
           ip: "10.80.40.230"
           mac: 0x02020a5028e6
        odd:
           ip: "10.80.40.239"
           mac: 0x02020a5028ef
        chan_range: [2688, 3072]
    4:
        even:
           ip: "10.80.40.199"
           mac: 0x02020a5028c7
        odd:
           ip: "10.80.40.208"
           mac: 0x02020a5028d0
        chan_range: [3072, 3456]
    5:
        even:
           ip: "10.80.40.231"
           mac: 0x02020a5028e7
        odd:
           ip: "10.80.40.240"
           mac: 0x02020a5028f0
        chan_range: [3456, 3840]
    6:
        even:
           ip: "10.80.40.200"
           mac: 0x02020a5028c8
        odd:
           ip: "10.80.40.209"
           mac: 0x02020a5028d1
        chan_range: [3840, 4224]
    7:
        even:
           ip: "10.80.40.232"
           mac: 0x02020a5028e8
        odd:
           ip: "10.80.40.241"
           mac: 0x02020a5028f1
        chan_range: [4224, 4608]
    8:
        even:
           ip: "10.80.40.201"
           mac: 0x02020a5028c9
        odd:
           ip: "10.80.40.210"
           mac: 0x02020a5028d2
        chan_range: [4608, 4992]
    9:
        even:
           ip: "10.80.40.233"
           mac: 0x02020a5028e9
        odd:
           ip: "10.80.40.242"
           mac: 0x02020a5028f2
        chan_range: [4992, 5376]
    10:
        even:
           ip: "10.80.40.202"
           mac: 0x02020a5028ca
        odd:
           ip: "10.80.40.211"
           mac: 0x02020a5028d3
        chan_range: [5376, 5760]
    11:
        even:
           ip: "10.80.40.234"
           mac: 0x02020a5028ea
        odd:
           ip: "10.80.40.243"
           mac: 0x02020a5028f3
        chan_range: [5760, 6144]
    12:
        even:
           ip: "10.80.40.203"
           mac: 0x02020a5028cb
        odd:
           ip: "10.80.40.212"
           mac: 0x02020a5028d4
        chan_range: [6144, 6528]
    13:
        even:
           ip: "10.80.40.235"
           mac: 0x02020a5028eb
        odd:
           ip: "10.80.40.244"
           mac: 0x02020a5028f4
        chan_range: [6528, 6912]
    14:
        even:
           ip: "10.80.40.204"
           mac: 0x02020a5028cc
        odd:
           ip: "10.80.40.213"
           mac: 0x02020a5028d5
        chan_range: [6912, 7296]
    15:
        even:
           ip: "10.80.40.236"
           mac: 0x02020a5028ec
        odd:
           ip: "10.80.40.245"
           mac: 0x02020a5028f5
        chan_range: [7296, 7680]
